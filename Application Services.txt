
AWS Lambda : Serverless architecture. 
--> Lambda performance depends on memory configurations. 

--> Python
--> .net core
--> java
--> go
--> ruby
--> Node.js

Lambda-canary : It open the required website and look for the string we have given.

google.com --> Google

--> Incresing the memory and timeout values.
--> Changing the required permissions on lambda associated roles. 
--> Can we run lambda within a VPC..?? YES
	--> FOr Lambda role Make sure you associate "AWSLambdaVPCAccessExecutionRole"


-------------

Task : Am sharing some lambda functions... Deploy the lambda functions and test it. 
(1. Volume Status check
2. Volume encrytption check
3. Instance Stop
4. Instance Start)

Task : Create an s3 bucket, When we upload any object to s3 bucket, It should trigger "Stop-Instance" lambda function and instance need to stop.

Task  : What ever the file names starting with "A/a" should move to another s3 bucket.

Task  : What ever the file names ending with ".bkp" should move to another s3 bucket.

Task : Create a lambda function to perform telnet test.  get output as "Telnet success" or "telnet failed".

telnet google.com 443

Task : Get the list of IAM users whoever not logged in to aws account in last 1 hr.

Task : 
** Get the list of IAM users accesskeyid and secretaccess keys not used in last 90 days. Send the list of users in .csv format file and write it to an s3 bucket.

======================================================================================================

D: 26/02/24

How many Account you manage : 
For Every CLient : Sandbox/Training, Dev, SIT/SQA, UAT and PRD ==> 5 Accounts
Central logging account and Management Account

Interview : Atleast 7 Accounts..

AWS Organisations along with SSO: 

Management account : From single aws account, we can manage multiple accounts. Centralized billing option for multiple aws accounts. 

SCP : Service Control Policy : We can apply policy at Org level / OU level to manage permissions on AWS accounts.

identity source : SSO / Active Directory
Permission Sets : set of permissions in aws.
you can see/find only org joined aws accounts in SSO.


AD : https://www.youtube.com/watch?v=RDlBoAHVmZs
Ad Connector : https://www.youtube.com/watch?v=Ca259gg6SoM
Linux to AD : https://www.youtube.com/watch?v=LWi9-XL2vWQ

Switch role : https://www.youtube.com/watch?v=sZiiB4yF0VY


================================================================================

AWS Cloudformation : IaC Infrastructure as Code : JSON/YAML : 
--> it's free. 

Prepare a cloudformation stack. This stack are reusable.
--> CLoudformation created resources will delete automatically when we delete the cloudformation stack.

rollback on failure : yes

2 ec2 instance, 3 s3 bucket, 1 rds instance

AWS Console Recorder : Browser plugin
Former2 : former2.com

https://aws.amazon.com/blogs/machine-learning/plant-leaf-disease-detection-with-amazon-rekognition-custom-labels/


Cloudformation Playlist: https://www.youtube.com/playlist?list=PLneBjIzDLECnvHUiqAe5DYHcnXSOTWeXO

==============================================================================

1. Launch an ec2 instance and use Former2 browser extension and generate the CF script and deploy it. 

2. Create an s3 bucket and configure lifecycle rule. Use Former2 to generate the cft and deploy it by changing the bucket name and test it.

3. Launch an ec2 instance using cloudformation template. While launching use userdata to make it webserver also, open post 80 and 22 open for everyone. Deploy it and test it.

Do the above tasks with the help of chatgpt, if required. 

==============================================================================



Codecommit
CodeDeploy
Codepipeline
codebuild

"S3/codecommit/git" --> Deploy to "ElasticBeanstalk"

________________

Create an IAM user, Make sure he has "Adminaccess / Codecommit full access", Generate "programatic keys (Accesskeyid&secretaccesskey)" and configure it in your local laptop.

aws configure
accesskey : 
secretaccesskey : 
region : ap-south-1
output :  

You need to have some softwares. 
1. Install Python
2. Install git
3. install grc : pip install git-remote-codecommit


git add .
git status
git commit -m "commit msg"
git push
git pull
git clone

Task : With shared code, perform CICD deployment.

GIT : 
https://www.youtube.com/watch?v=rtI26X6FJX0&list=PLneBjIzDLECkdgoinrTO7D519zgPEmcte




